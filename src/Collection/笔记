Arraylist 与 LinkedList 异同
首先二者都是同属Collection下的List接口的，但是两种list实现类型不一样。而且这两种都是不同步的，即线程不安全的。
ArrayList底层使用的是数组  而LinkedList所使用的则是双向链表。

由于它们底层所使用的数据结构，导致了ArrayList在做查询和访问的时候更快，因为可以直接通过序号访问。
而LinkedList在插入删除时则更快，因为只需要改变插入前后的数据相连即可。

内存空间占用： ArrayList的空间浪费主要体现在在list列表的结尾会预留一定的容量空间，
而LinkedList的空间花费则体现在它的每一个元素都需要消耗比ArrayList更多的空间（因为要存放直接后继和直接前驱以及数据）。

其实可以用实现RandomAccess 接口来观察这些结构实现快速随机访问的功能没有.
这两种结构的遍历方式一种是foreach  另一种则是迭代

Vector类的所有方法都是同步的。可以由两个线程安全地访问一个Vector对象、但是一个线程访问Vector的话代码要在同步操作上耗费大量的时间。
Arraylist不是同步的，所以在不需要保证线程安全时时建议使用Arraylist。

