1.String和StringBuffer、StringBuilder的区别
首先我们都知道前者是一个定义字符的类  后者则是字符缓存器
！String 类中使用 final 关键字字符数组保存字符串
而StringBuilder 与 StringBuffer 都继承自 AbstractStringBuilder 类,但是并没有用final关键字修饰char数组

StringBuffer 对方法加了同步锁或者对调用的方法加了同步锁，所以是线程安全的。StringBuilder 并没有对方法进行加同步锁，所以是非线程安全的。

每次对 String 类型进行改变的时候，都会生成一个新的 String 对象，然后将指针指向新的 String 对象。
StringBuffer 每次都会对 StringBuffer 对象本身进行操作，而不是生成新的对象并改变对象引用。
相同情况下使用 StirngBuilder 相比使用 StringBuffer 仅能获得 10%~15% 左右的性能提升，但却要冒多线程不安全的风险。

所以在我们处理少量数据时使用String，单线程处理大量数据时使用StringBuilder，多线程处理大量数据时使用StringBuffer。

2.什么是反射机制？反射机制的应用场景有哪些？
JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；
对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。
优点： 运行期类型的判断，动态加载类，提高代码灵活度。
缺点： 性能瓶颈：反射相当于一系列解释操作，通知 JVM 要做的事情，性能比直接的java代码要慢很多。

3.什么是JDK?什么是JRE？什么是JVM？三者之间的联系与区别？
JDK用于开发，JRE用于运行java程序 ；
JDK和JRE中都包含JVM ；
JVM是java编程语言的核心并且具有平台独立性。

当然了  这里面就会无法避免的扯到字节码文件，被翻译成.class的文件是被提供给JVM用来使用的。
但是由于我们Java语言非常牛批   .class文件还能够反编译   这里面就牵扯到了反射机制和各种框架。

4.Java和C++的区别

都是面向对象的语言，都支持封装、继承和多态
Java不提供指针来直接访问内存，程序内存更加安全
Java的类是单继承的，C++支持多重继承；虽然Java的类不可以多继承，但是接口可以多继承。
(其实Java可以通过组合的方法进行多继承，即：单继承+多接口实现的方法进行多继承的实现。)
Java有自动内存管理机制，不需要程序员手动释放无用内存
(但是C++由于可以管理内存的方法使得它的底层内存控制变得十分优雅)

5.(老调重弹)抽象类和接口的区别
接口的方法默认是public，所有方法在接口中不能有实现，抽象类可以有非抽象的方法
接口中的实例变量默认是final类型的，而抽象类中则不一定
一个类可以实现多个接口，但最多只能实现一个抽象类
一个类实现接口的话要实现接口的所有方法，而抽象类不一定
接口不能用new实例化，但可以声明，但是必须引用一个实现该接口的对象 从设计层面来说，抽象是对类的抽象，是一种模板设计，接口是行为的抽象，是一种行为的规范。

6.成员变量与局部变量的区别有那些？
从语法形式上，看成员变量是属于类的，而局部变量是在方法中定义的变量或是方法的参数；成员变量可以被public,private,static等修饰符所修饰，而局部变量不能被访问控制修饰符及static所修饰；但是，成员变量和局部变量都能被final所修饰；
！从变量在内存中的存储方式来看，成员变量是对象的一部分，而对象存在于堆内存，局部变量存在于栈内存
从变量在内存中的生存时间上看，成员变量是对象的一部分，它随着对象的创建而存在，而局部变量随着方法的调用而自动消失。
成员变量如果没有被赋初值，则会自动以类型的默认值而赋值（一种情况例外被final修饰但没有被static修饰的成员变量必须显示地赋值）；而局部变量则不会自动赋值。

7.重载和重写的区别
重载： 发生在同一个类中，方法名必须相同，
参数类型不同、个数不同、顺序不同，方法返回值和访问修饰符可以不同，发生在编译时。 　　

重写： 发生在父子类中，方法名、参数列表必须相同，返回值范围小于等于父类，抛出的异常范围小于等于父类，
访问修饰符范围大于等于父类；如果父类方法访问修饰符为private则子类就不能重写该方法。

8.字符型常量和字符串常量的区别？
形式上: 字符常量是单引号引起的一个字符 字符串常量是双引号引起的若干个字符
含义上: 字符常量相当于一个整形值(ASCII值),可以参加表达式运算 字符串常量代表一个地址值(该字符串在内存中存放位置)
占内存大小 字符常量只占一个字节 字符串常量占若干个字节(至少一个字符结束标志)

这里就有char和spring之间的各种方法的实现了  从String和char的相互转换的各种方法