1.& && | ||这些位运算符和逻辑运算符的区别

2.转发(Forward)和重定向(Redirect)的区别
转发是服务器行为，重定向是客户端行为。
转发（Forword） 通过RequestDispatcher对象的forward（HttpServletRequest request,HttpServletResponse response）方法实现的。
RequestDispatcher 可以通过HttpServletRequest 的 getRequestDispatcher()方法获得。

重定向（Redirect） 是利用服务器返回的状态吗来实现的。客户端浏览器请求服务器的时候，服务器会返回一个状态码。
服务器通过HttpServletRequestResponse的setStatus(int status)方法设置状态码。
如果服务器返回301或者302，则浏览器会到新的网址重新请求该资源。

3.在浏览器中输入url地址到显示主页的过程,整个过程会使用哪些协议
首先浏览器查找域名的IP地址(DNS查找，DNS：获取域名对应的IP)、浏览器向web服务器发送HTTP请求(Http协议)、服务器处理请求并生成HTML响应(TCP/IP)
这中间还有路由选择、路由通信所需要用到的OPSF、ARP协议。

4.IP地址与MAC地址的区别
IP地址是指互联网协议地址（Internet Protocol Address）IP Address的缩写。
IP地址是IP协议提供的一种统一的地址格式，它为互联网上的每一个网络和每一台主机分配一个逻辑地址，以此来屏蔽物理地址的差异。

MAC 地址又称为物理地址、硬件地址，用来定义网络设备的位置。网卡的物理地址通常是由网卡生产厂家写入网卡的，具有全球唯一性。
MAC地址用于在网络中唯一标示一个网卡，一台电脑会有一或多个网卡，每个网卡都需要有一个唯一的MAC地址。

5.为什么要使用索引？索引这么多优点，为什么不对表中的每一个列创建一个索引呢？
索引是如何提高查询速度的？说一下使用索引的注意事项？Mysql索引主要使用的两种数据结构？什么是覆盖索引?

为什么要使用索引？
通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性。
可以大大加快 数据的检索速度（大大减少的检索的数据量）, 这也是创建索引的最主要的原因。
帮助服务器避免排序和临时表
将随机IO变为顺序IO
可以加速表和表之间的连接，特别是在实现数据的参考完整性方面特别有意义。

索引这么多优点，为什么不对表中的每一个列创建一个索引呢？
当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，这样就降低了数据的维护速度。
索引需要占物理空间，除了数据表占数据空间之外，每一个索引还要占一定的物理空间，如果要建立聚簇索引，那么需要的空间就会更大。
创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增加。

索引是如何提高查询速度的？
将无序的数据变成相对有序的数据（就像查目录一样）

说一下使用索引的注意事项
避免 where 子句中对字段施加函数，这会造成无法命中索引。
在使用InnoDB时使用与业务无关的自增主键作为主键，即使用逻辑主键，而不要使用业务主键。
将打算加索引的列设置为 NOT NULL ，否则将导致引擎放弃使用索引而进行全表扫描
删除长期未使用的索引，不用的索引的存在会造成不必要的性能损耗 MySQL 5.7 可以通过查询 sys 库的 chema_unused_indexes 视图来查询哪些索引从未被使用
在使用 limit offset 查询缓慢时，可以借助索引来提高性能

Mysql索引主要使用的哪两种数据结构？
哈希索引：对于哈希索引来说，底层的数据结构就是哈希表，因此在绝大多数需求为单条记录查询的时候，可以选择哈希索引，查询性能最快；其余大部分场景，建议选择BTree索引。
BTree索引：Mysql的BTree索引使用的是B树中的B+Tree。但对于主要的两种存储引擎（MyISAM和InnoDB）的实现方式是不同的。

什么是覆盖索引?
如果一个索引包含（或者说覆盖）所有需要查询的字段的值，我们就称 之为“覆盖索引”。
我们知道在InnoDB存储引擎中，如果不是主键索引，叶子节点存储的是主键+列值。最终还是要“回表”，也就是要通过主键再查找一次,
这样就会比较慢。覆盖索引就是把要查询出的列和索引是对应的，不做回表操作！